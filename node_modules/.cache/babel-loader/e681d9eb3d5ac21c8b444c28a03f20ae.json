{"remainingRequest":"/home/sklaus/Bureau/coop/node_modules/babel-loader/lib/index.js!/home/sklaus/Bureau/coop/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/sklaus/Bureau/coop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sklaus/Bureau/coop/src/views/CreationCompte.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sklaus/Bureau/coop/src/views/CreationCompte.vue","mtime":1643964863982},{"path":"/home/sklaus/Bureau/coop/babel.config.js","mtime":1642404375261},{"path":"/home/sklaus/Bureau/coop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sklaus/Bureau/coop/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sklaus/Bureau/coop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sklaus/Bureau/coop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmdWxsbmFtZTogJycsCiAgICAgIGVtYWlsOiAnJywKICAgICAgcGFzc3dvcmQ6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdmFsaWRhdGlvbjogZnVuY3Rpb24gdmFsaWRhdGlvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJGFwaS5wb3N0KCdtZW1iZXJzJywgewogICAgICAgIGZ1bGxuYW1lOiB0aGlzLmZ1bGxuYW1lLAogICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgYWxlcnQoJ1ZvdHJlIGNvbXB0ZSBhIGJpZW4gw6l0w6kgY3LDqWUnKTsKCiAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCcvY29ubmV4aW9uJyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGFsZXJ0KGVycm9yLnJlc3BvbnNlLmRhdGEubWVzc2FnZSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["CreationCompte.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,KAAA,EAAA,KAAA,KAFA;AAGA,QAAA,QAAA,EAAA,KAAA;AAHA,OAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,8BAAA,CAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,OARA,EASA,KATA,CASA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AACA,OAXA;AAYA;AAdA;AARA,CAAA","sourcesContent":["<template>\n  <div id=\"form-create\">\n    <h1>Créer un compte</h1>\n    <form @submit.prevent=\"validation\">\n\n      <div class=\"field\">\n        <label class=\"label\">Fullname</label>\n        <div class=\"control\">\n          <input class=\"input\" type=\"text\" required v-model=\"fullname\" placeholder=\"John Doe\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control\">\n          <input class=\"input\" type=\"email\" required v-model=\"email\" placeholder=\"johndoe@mail.com\">\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">Password</label>\n        <div class=\"control\">\n          <input class=\"input\" type=\"password\" required v-model=\"password\" placeholder=\"**********\">\n        </div>\n      </div>\n\n      <div class=\"field is-grouped\">\n        <div class=\"control\">\n          <button class=\"button is-link\">Valider</button>\n        </div>\n        <div class=\"control\">\n          <button class=\"button is-link is-light\"><router-link to=\"connexion\">Suivez ce lien pour vous connectez</router-link></button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      fullname : '',\n      email : '',\n      password : ''\n    };\n  },\n  methods : {\n    validation(){\n      this.$api.post('members', {\n        fullname: this.fullname,\n        email : this.email,\n        password : this.password,\n      })\n      .then((response) => {\n        alert('Votre compte a bien été crée');\n        this.$router.push('/connexion');\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views"}]}