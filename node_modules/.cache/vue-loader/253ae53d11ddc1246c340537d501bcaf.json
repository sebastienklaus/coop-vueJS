{"remainingRequest":"/home/sklaus/Bureau/coop/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sklaus/Bureau/coop/src/views/Conversation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sklaus/Bureau/coop/src/views/Conversation.vue","mtime":1643899741981},{"path":"/home/sklaus/Bureau/coop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sklaus/Bureau/coop/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sklaus/Bureau/coop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sklaus/Bureau/coop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBwb3N0ZXJNZXNzYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvcG9zdGVyTWVzc2FnZS52dWUnOwppbXBvcnQgTWVzc2FnZSBmcm9tICcuLi9jb21wb25lbnRzL01lc3NhZ2UudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogICBjb21wb25lbnRzIDogewogICAgICBwb3N0ZXJNZXNzYWdlLAogICAgICBNZXNzYWdlLAogICB9LAogICAgZGF0YSgpewogICAgICAgcmV0dXJuIHsKICAgICAgICAgLy8gIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgICBjb252ZXJzYXRpb246IFtdLAogICAgICAgICAgbWVzc2FnZXM6IFtdCiAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgIHRoaXMuZ2V0TWVzc2FnZSgpOwogICAgICAgY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zKTsKICAgICAgIHRoaXMuJGFwaQogICAgICAgLmdldChgY2hhbm5lbHMvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuaWR9YCkKICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgaWYocmVzcG9uc2UuZGF0YSA9PT0gbnVsbCApIHsKICAgICAgICAgICAgIC8vc2kgbCdpZCBuJ2VzdCBwYXMgYm9uLCAKICAgICAgICAgICAgIC8vb24gZXN0IGRpcmlnw6kgdmVycyBsYSBwYWdlIGQnYWNjdWVpbCAobGlzdCBkZXMgY29udmVyc2F0aW9ucykKICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgICAgICAKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuY29udmVyc2F0aW9uID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICB9KQogICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgdGhpcy5mbGFzaE1lc3NhZ2Uuc2hvdyh7CiAgICAgICAgICAgIHN0YXR1czogImVycm9yIiwKICAgICAgICAgICAgdGl0bGU6ICJTb21ldGhpbmcgd2VudCB3cm9uZyA6KCIsCiAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLnJlc3BvbnNlLmRhdGEubWVzc2FnZSwKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgdGhpcy4kYnVzLiRvbignY2hhcmdlci1tZXNzYWdlJywgbWVzc2FnZSA9PiB7CiAgICAgICAgICAvLyBsZSBwYXJhbcOodHJlIG1lc3NhZ2Ugbidlc3QgcGFzIHV0aWxlLCBvbiB0cm91dmVyYSBsZSBtZXNzYWdlCiAgICAgICAgICAvLyBhbGxhbnQgY2hlcmNoZXIgdG91cyBsZXMgbWVzc2FnZSBkYW5zIGxlIGN1cnJlbnQgY2hhbm5lbAogICAgICAgICAvLyAgY29uc29sZS5sb2cobWVzc2FnZSk7CiAgICAgICAgICB0aGlzLmdldE1lc3NhZ2UoKTsKICAgICAgICAgLy8gdGhpcy5tZXNzYWdlLnB1c2gobWVzc2FnZSk7CiAgICAgICB9KTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICBnZXRNZXNzYWdlKCkgewogICAgICAgICAgdGhpcy4kYXBpLmdldChgY2hhbm5lbHMvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuaWR9L3Bvc3RzYCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgIH0pCiAgICAgICB9LAogICAgICAgcmVtb3ZlQ29udmVyc2F0aW9uKCl7CiAgICAgIHRoaXMuJGFwaQogICAgICAgLmRlbGV0ZShgY2hhbm5lbHMvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuaWR9YCkKICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgIGFsZXJ0KCdWb3RyZSBjb252ZXJzYXRpb24gYSBiaWVuIMOpdMOpIHN1cHByaW3DqScpOwogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICAgIH0pCiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICBhbGVydChlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpOwogICAgICB9KTsKICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["Conversation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Conversation.vue","sourceRoot":"src/views","sourcesContent":["<template>\n   <div>\n        <Header/>\n              <section class=\"section\">\n                      <h4 class=\"title is-4 has-text-centered\">Détail de conversation</h4>\n                        <div class=\"box\" v-if=\"conversation\">\n                           <p><b>{{conversation.topic}}</b></p>\n                           <p>{{conversation.label}}</p><br/>\n                           <a @click=\"removeConversation()\" class=\"button button is-dark\">Delete</a>\n                              <!-- <router-link  div=\"box\" class=\"button button is-dark\" :to=\"{name : 'deleteConversation', params :{id:conversation.id}}\"> delete conversation</router-link> -->\n                        </div>\n                        <posterMessage :conversation=\"conversation\"/>\n                        <div v-for=\"message in messages\" :key=\"message.id\">\n                           <Message :message=\"message\" />\n                        </div>\n               </section>\n         <FlashMessage></FlashMessage>\n   </div>\n</template>\n\n<script>\nimport posterMessage from '../components/posterMessage.vue';\nimport Message from '../components/Message.vue';\nexport default {\n   components : {\n      posterMessage,\n      Message,\n   },\n    data(){\n       return {\n         //  id: this.$route.params.id,\n          conversation: [],\n          messages: []\n       }\n    },\n    mounted() {\n       this.getMessage();\n       console.log(this.$route.params);\n       this.$api\n       .get(`channels/${this.$route.params.id}`)\n       .then((response) => {\n          if(response.data === null ) {\n             //si l'id n'est pas bon, \n             //on est dirigé vers la page d'accueil (list des conversations)\n             this.$router.push('/');\n             \n          }\n          this.conversation = response.data;\n\n       })\n       .catch((error) => {\n          this.flashMessage.show({\n            status: \"error\",\n            title: \"Something went wrong :(\",\n            message: error.response.data.message,\n          });\n        });\n       this.$bus.$on('charger-message', message => {\n          // le paramètre message n'est pas utile, on trouvera le message\n          // allant chercher tous les message dans le current channel\n         //  console.log(message);\n          this.getMessage();\n         // this.message.push(message);\n       });\n    },\n    methods: {\n       getMessage() {\n          this.$api.get(`channels/${this.$route.params.id}/posts`).then(response => {\n             this.messages = response.data;\n          })\n       },\n       removeConversation(){\n      this.$api\n       .delete(`channels/${this.$route.params.id}`)\n       .then((response) => {\n        alert('Votre conversation a bien été supprimé');\n        this.$router.push('/');\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n    },\n    }\n}\n</script>\n\n<style>\n</style>"]}]}