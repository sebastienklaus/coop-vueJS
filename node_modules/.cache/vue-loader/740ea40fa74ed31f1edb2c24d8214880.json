{"remainingRequest":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/src/views/Conversation.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/src/views/Conversation.vue","mtime":1643008597767},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/css-loader/dist/cjs.js","mtime":1643008320495},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643008320887},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/postcss-loader/src/index.js","mtime":1643008320695},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/sass-loader/dist/cjs.js","mtime":1643008320807},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/cache-loader/dist/cjs.js","mtime":1643008320407},{"path":"/home/klaus9u/Bureau/TD/Dev. Applications Web Client/coop/coop-vueJS/node_modules/vue-loader/lib/index.js","mtime":1643008320887}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgphIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY29sb3I6IGJsYWNrOwp9Cg=="},{"version":3,"sources":["Conversation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA","file":"Conversation.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Conversation Preview</h1>\n    <h6 class=\"text-info\" v-if=\"$store.state.member\">\n      Hello dear {{ $store.state.member.fullname }}\n    </h6>\n\n    <div class=\"container mt-3\">\n      <div v-if=\"conversation\">\n        <h1>{{ conversation.topic }}</h1>\n        <h4>{{ conversation.label }}</h4>\n        <button class=\"btn btn-danger\" @click=\"deleteConv()\">\n          Delete Conversation\n        </button>\n      </div>\n      <h1 class=\"mt-4\">Messages</h1>\n      <b-list-group>\n        <b-list-group-item v-for=\"m in messages\" :key=\"m.id\">\n          <p>{{ m.message }}</p>\n          <button\n            class=\"btn btn-success\"\n            @click=\"\n              editMsg = m.message;\n              editMsgId = m.id;\n            \"\n            v-b-modal.editModal\n          >\n            Edit\n          </button>\n          <button class=\"btn btn-danger\" @click=\"deleteMessage(m.id)\">\n            Delete\n          </button>\n        </b-list-group-item>\n      </b-list-group>\n\n      <h4 class=\"mt-4\">Add new message</h4>\n      <form>\n        <div class=\"mt-2\">\n          <label>Message</label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"Message\"\n            v-model=\"message\"\n            required\n          >\n          </textarea>\n        </div>\n        <div class=\"mt-2\">\n          <button class=\"btn btn-info\" @click=\"addMessage\">Add</button>\n        </div>\n      </form>\n\n      <!-- Modal -->\n      <b-modal id=\"editModal\" title=\"Edit a message\" hide-footer>\n        <form>\n          <div class=\"mt-2\">\n            <label>Message</label>\n            <textarea\n              class=\"form-control\"\n              placeholder=\"Message\"\n              v-model=\"editMsg\"\n              required\n            >\n            </textarea>\n          </div>\n          <div class=\"mt-2\">\n            <button class=\"btn btn-info\" @click=\"editMessage()\">Edit</button>\n          </div>\n        </form>\n      </b-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      conversation: null,\n      messages: [],\n      message: \"\",\n      editMsg: \"\",\n      editMsgId: \"\",\n    };\n  },\n  methods: {\n    //Get conversation by id\n    getConversationById() {\n      this.$api\n        .get(`channels/${this.$route.params.id}`)\n        .then((response) => {\n          this.conversation = response.data;\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n\n    //Get conversation by id\n    deleteConv() {\n      this.$api\n        .delete(`channels/${this.$route.params.id}`)\n        .then((response) => {\n          //return home\n          this.$router.push(\"/\");\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n\n    //Get conversation messages\n    getConversationMessages() {\n      this.$api\n        .get(`channels/${this.$route.params.id}/posts`)\n        .then((response) => {\n          this.messages = response.data;\n          console.log(response.data);\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n\n    //Add a message\n    addMessage() {\n      this.$api\n        .post(`channels/${this.$route.params.id}/posts`, {\n          message: this.message,\n          member_id: this.$store.state.member,\n        })\n        .then((response) => {\n          this.getConversationMessages();\n          this.message = \"\";\n          alert(\"Message added!\");\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n\n    //Delete a message\n    deleteMessage(id) {\n      this.$api\n        .delete(`channels/${this.$route.params.id}/posts/${id}`)\n        .then((response) => {\n          alert(\"Message deleted !\");\n          this.getConversationMessages();\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n\n    //Edit a message\n    editMessage() {\n      this.$api\n        .put(`channels/${this.$route.params.id}/posts/${this.editMsgId}`, {\n          message: this.editMsg,\n        })\n        .then((response) => {\n          alert(\"Message updated !\");\n          this.editMsgId = \"\";\n          this.editMsg = \"\";\n\n          //Hide modal\n          this.$bvModal.hide(\"editModal\");\n\n          //Refresh messages\n          this.getConversationMessages();\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    },\n  },\n\n  mounted() {\n    //Get conversation by id\n    this.getConversationById();\n\n    //Get conversation messages\n    this.getConversationMessages();\n  },\n};\n</script>\n\n<style lang=\"scss\">\na {\n  text-decoration: none;\n  color: black;\n}\n</style>"]}]}